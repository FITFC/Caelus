buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

version = "${version_minecraft}-${version_mod}"
group = "${mod_group}"
archivesBaseName = "${mod_id}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20180921-1.13'

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                caelus {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                caelus {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.13.2-25.0.84'
}

sourceSets {
    main {
        resources {
            srcDirs += 'docs'
        }
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "caelus",
            "Specification-Vendor": "C4",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"C4",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("build/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

task apiJar(type: Jar) {
    classifier = 'api'
    include 'top/theillusivec4/caelus/api/**/*'
    from sourceSets.main.allSource
    from sourceSets.main.output
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

tasks.build.dependsOn apiJar, sourcesJar

publishing {
    tasks.publish.dependsOn 'build'
    publications {

        mavenJava(MavenPublication) {
            artifact (reobfArtifact) {
                artifactId project.archivesBaseName
            }
            artifact (sourcesJar) {
                artifactId project.archivesBaseName
            }
            artifact (apiJar) {
                artifactId project.archivesBaseName
            }
        }
    }

    repositories {

        if (project.hasProperty('urlMaven')) {

            if (project.hasProperty('userMaven') && project.hasProperty('passMaven')) {

                maven {
                    url urlMaven
                    credentials {
                        username userMaven
                        password passMaven
                    }
                }
            }
        }
    }
}